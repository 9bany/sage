
set A, 10
set B, 7

mov A, C
bitwise-and B, C
put-int C

set D, 10 put-char D

set B, 100
bitwise-not B
inc B
put-int B

set D, 10 put-char D

set A, 10
set B, 7

bitwise-xor B, A

fun put_bits
    set A, 128 bitwise-and [SP], A
    if A
        set A, 49
    else
        set A, 48
    end
    put-char A
    set A, 64 bitwise-and [SP], A
    if A
        set A, 49
    else
        set A, 48
    end
    put-char A
    set A, 32 bitwise-and [SP], A
    if A
        set A, 49
    else
        set A, 48
    end
    put-char A
    set A, 16 bitwise-and [SP], A
    if A
        set A, 49
    else
        set A, 48
    end
    put-char A
    set A, 8 bitwise-and [SP], A
    if A
        set A, 49
    else
        set A, 48
    end
    put-char A
    set A, 4 bitwise-and [SP], A
    if A
        set A, 49
    else
        set A, 48
    end
    put-char A
    set A, 2 bitwise-and [SP], A
    if A
        set A, 49
    else
        set A, 48
    end
    put-char A
    set A, 1 bitwise-and [SP], A
    if A
        set A, 49
    else
        set A, 48
    end
    put-char A
    pop
end

push A
call put_bits