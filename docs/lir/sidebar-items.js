initSidebarItems({"enum":[["ConstExpr","A compiletime expression."],["Error","An LIR compilation error."],["Expr","TODO: Add variants for `LetProc`, `LetVar`, etc. to support multiple definitions. This way, we donâ€™t overflow the stack with several clones of the environment. A runtime expression."],["Type","The representation of a type in the LIR type system."]],"struct":[["CoreBuiltin","A builtin pseudo-procedure implemented in the core assembly variant."],["Env","An environment under which expressions and types are compiled and typechecked. This is essentially the scope of an expression."],["Procedure","A procedure of LIR code which can be applied to a list of arguments."],["StandardBuiltin","A builtin pseudo-procedure implemented in the standard assembly variant."]],"trait":[["Compile","A trait which allows an LIR expression to be compiled to one of the two variants of the assembly language."],["GetSize","Get the size of something in memory (number of cells)."],["GetType","Get the type associated with a value under a given environment."],["Simplify","Simplify an expression while maintaining structural equality."],["TypeCheck","A value that can be typechecked."]]});